{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red193\green193\blue193;\red18\green139\blue2;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid101\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs38 \cf0 \expnd0\expndtw0\kerning0
--- Day 3: Spiral Memory ---\
\pard\pardeftab720
\cf0 \expnd0\expndtw0\kerning0
You come across an experimental new kind of memory stored on an infinite two-dimensional grid.\
Each square on the grid is allocated in a spiral pattern starting at a location marked 1 and then counting up while spiraling outward. For example, the first few squares are allocated like this:\
17  16  15  14  13\
18   5   4   3  12\
19   6   1   2  11\
20   7   8   9  10\
21  22  23---> ...\
While this is very space-efficient (no squares are skipped), requested data must be carried back to square 1 (the location of the only access port for this memory system) by programs that can only move up, down, left, or right. They always take the shortest path: the {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Taxicab_geometry"}}{\fldrslt \expnd0\expndtw0\kerning0
Manhattan Distance}} between the location of the data and square 1.\
For example:\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Data from square 1 is carried 0 steps, since it's at the access port.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Data from square 12 is carried 3 steps, such as: down, left, left.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Data from square 23 is carried only 2 steps: up twice.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Data from square 1024 must be carried 31 steps.\
\pard\pardeftab720
\cf0 \expnd0\expndtw0\kerning0
\shad\shadx0\shady0\shadr100\shado255 \shadc0 How many steps\expnd0\expndtw0\kerning0
\shad0  are required to carry the data from the square identified in your puzzle input all the way to the access port?\
Your puzzle answer was 371.\
\pard\pardeftab720
\cf0 \expnd0\expndtw0\kerning0
--- Part Two ---\
\pard\pardeftab720
\cf0 \expnd0\expndtw0\kerning0
As a stress test on the system, the programs here clear the grid and then store the value 1 in square 1. Then, in the same allocation order as shown above, they store the sum of the values in all adjacent squares, including diagonals.\
So, the first few squares' values are chosen as follows:\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls2\ilvl0\cf0 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Square 1 starts with the value 1.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Square 2 has only one adjacent filled square (with value 1), so it also stores 1.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Square 3 has both of the above squares as neighbors and stores the sum of their values, 2.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Square 4 has all three of the aforementioned squares as neighbors and stores the sum of their values, 4.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Square 5 only has the first and fourth squares as neighbors, so it gets the value 5.\
\pard\pardeftab720
\cf0 \expnd0\expndtw0\kerning0
Once a square is written, its value does not change. Therefore, the first few squares would receive the following values:\
147  142  133  122   59\
304    5    4    2   57\
330   10    1    1   54\
351   11   23   25   26\
362  747  806--->   ...\
What is the \expnd0\expndtw0\kerning0
\shad\shadx0\shady0\shadr100\shado255 \shadc0 first value written\expnd0\expndtw0\kerning0
\shad0  that is \expnd0\expndtw0\kerning0
\shad\shadx0\shady0\shadr100\shado255 \shadc0 larger\expnd0\expndtw0\kerning0
\shad0  than your puzzle input?\
Your puzzle answer was 369601.}